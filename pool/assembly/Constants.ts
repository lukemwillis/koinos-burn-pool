import { System } from "@koinos/sdk-as";

export class Constants {
  static KoinBuffer(): u64 { // amount to disallow withdrawal or burning
    return 1000000000; // 10 Koin
  }

  static OperatorFee(): u64 {
    return 20; // 1/20 = 5%
  }
  
  static OperatorWallet(): Uint8Array {
    // Address: 1DfotF65NdVdLfNzrrhexzS7oFmJuXvLsT
    return arrayToUint8Array([
      0x00, 0x8a, 0xf8, 0x73, 0xcb, 0xad, 0x61, 0x21, 0x64, 0x79, 0x60, 0x53, 
      0x8a, 0x4b, 0xa5, 0x5f, 0x06, 0x97, 0xcf, 0x1c, 0x0e, 0x71, 0x59, 0x7e,
      0x02
    ]);
  }

  static ContractId(): Uint8Array {
    return System.getContractId();
  }

  static KoinContractId(): Uint8Array {
    if (BUILD_FOR_TESTING) {
      // Address: BRmrUgtSQVUggoeE9weG4f7nidyydnYfQ
      return arrayToUint8Array([
        0x00, 0x72, 0x60, 0xae, 0xaf, 0xad, 0xc7, 0x04, 0x31, 0xea, 0x9c, 0x3f,
        0xbe, 0xf1, 0x35, 0xb9, 0xa4, 0x15, 0xc1, 0x0f, 0x51, 0x95, 0xe8, 0xd5,
        0x57,
      ]);
    } else {
      // Address: 19JntSm8pSNETT9aHTwAUHC5RMoaSmgZPJ
      return arrayToUint8Array([
        0x00, 0x5b, 0x1e, 0x61, 0xd3, 0x72, 0x59, 0xb9, 0xc2, 0xd9, 0x9b, 0xf4,
        0x17, 0xf5, 0x92, 0xe0, 0xb7, 0x77, 0x25, 0x16, 0x5d, 0x24, 0x88, 0xbe,
        0x45,
      ]);
    }
  }

  static VhpContractId(): Uint8Array {
    if (BUILD_FOR_TESTING) {
      // Address: 1CZvRyRuNxghMUUNGqsKsT5x55r6wugd1C
      return arrayToUint8Array([
        0x00, 0x7e, 0xe3, 0x4b, 0xc6, 0x08, 0xc0, 0x4c, 0xd5, 0x37, 0x34, 0x7c,
        0xf7, 0x30, 0x28, 0x15, 0x77, 0x4f, 0xcf, 0x75, 0x0c, 0x6a, 0x87, 0x75,
        0xf3,
      ]);
    } else {
      // Address: 1JZqj7dDrK5LzvdJgufYBJNUFo88xBoWC8
      return arrayToUint8Array([
        0x00, 0xc0, 0xb0, 0x1f, 0xa4, 0xbb, 0xcd, 0x9f, 0x06, 0x1e, 0x0d, 0xf2,
        0x92, 0x67, 0x0c, 0xa0, 0xdb, 0xfa, 0xa6, 0x52, 0x6a, 0xdb, 0x88, 0xae,
        0x09,
      ]);
    }
  }

  static PobContractId(): Uint8Array {
    // Address: 198RuEouhgiiaQm7uGfaXS6jqZr6g6nyoR
    return arrayToUint8Array([
      0x00, 0x59, 0x28, 0xb4, 0x3a, 0xec, 0x3d, 0x42, 0x15, 0x6d, 0x46, 0x31,
      0xaf, 0xcd, 0xf6, 0x11, 0xe8, 0x3f, 0x74, 0x9d, 0x18, 0x5e, 0x0a, 0x11,
      0xdc
    ]);
  }

  static PobBurnEntryPoint(): u32 {
    return 0x859facc5;
  }
}

function arrayToUint8Array(a: Array<u8>): Uint8Array {
  let uArray = new Uint8Array(a.length);

  for (let i = 0; i < a.length; i++) uArray[i] = a[i];

  return uArray;
}
